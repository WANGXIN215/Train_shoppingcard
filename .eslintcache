[{"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\models\\cart.js":"3","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\models\\products.js":"4","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\components\\Chioce\\Chioce.js":"5","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\components\\Show\\Show.js":"6","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\components\\Cart\\Cart.js":"7","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\api\\index.js":"8","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\assets\\Font.js":"9"},{"size":319,"mtime":1608361306698,"results":"10","hashOfConfig":"11"},{"size":501,"mtime":1608367929600,"results":"12","hashOfConfig":"11"},{"size":4042,"mtime":1608514066387,"results":"13","hashOfConfig":"11"},{"size":9915,"mtime":1608519590905,"results":"14","hashOfConfig":"11"},{"size":1419,"mtime":1608390036859,"results":"15","hashOfConfig":"11"},{"size":4728,"mtime":1608517873019,"results":"16","hashOfConfig":"11"},{"size":6213,"mtime":1608522536474,"results":"17","hashOfConfig":"11"},{"size":148,"mtime":1608176650613,"results":"18","hashOfConfig":"11"},{"size":223,"mtime":1608361784054,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"t1f4tv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\index.js",[],["41","42"],"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\models\\cart.js",[],"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\models\\products.js",[],"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\components\\Chioce\\Chioce.js",[],"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\components\\Show\\Show.js",["43"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Menu,\r\n  Button,\r\n  Dropdown,\r\n  Card,\r\n  Image,\r\n  message,\r\n  Tag,\r\n  Popover,\r\n} from \"antd\";\r\nimport \"./show.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"dva\";\r\n\r\nfunction Show({ dispatch, products }) {\r\n  useEffect(() => {\r\n    if (window.localStorage.show_data) {\r\n      dispatch({\r\n        type: \"products/setStorage\",\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: \"products/fetch\",\r\n        payload: {\r\n          page: 1,\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"allWife\">\r\n      <Row className=\"choose\" gutter={[10, 10]}>\r\n        <Col xs={24} sm={12}>\r\n          发现{products.length}件商品\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          排序&nbsp;&nbsp;\r\n          <Dropdown\r\n            overlay={\r\n              <Menu>\r\n                <Menu.Item\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"products/recoverDefault\",\r\n                    });\r\n                  }}\r\n                >\r\n                  默认排序\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"products/changeUp\",\r\n                    });\r\n                  }}\r\n                >\r\n                  价格升序\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                  onClick={() => {\r\n                    dispatch({\r\n                      type: \"products/changeDown\",\r\n                    });\r\n                  }}\r\n                >\r\n                  价格降序\r\n                </Menu.Item>\r\n              </Menu>\r\n            }\r\n          >\r\n            <a\r\n              className=\"ant-dropdown-link\"\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              排序选择 <DownOutlined />\r\n            </a>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[20, 20]}>\r\n        {products.map((item, index) => {\r\n          return (\r\n            <Col\r\n              xs={24}\r\n              sm={12}\r\n              md={12}\r\n              lg={8}\r\n              xl={6}\r\n              xxl={6}\r\n              key={index + item}\r\n            >\r\n              <Card bordered hoverable className=\"wife\">\r\n                <Image\r\n                  src={`./img/${item.sku}_1.jpg`}\r\n                  alt=\"图片未加载\"\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n                <div className=\"price\">\r\n                  <div className=\"show-title\">{item.title}</div>\r\n                  <hr className=\"line\" />\r\n                  {item.currencyFormat}\r\n                  <span className=\"show-price\"> {item.price}</span>\r\n                </div>\r\n                <Popover\r\n                  content={item.availableSizes.map((current, index) => {\r\n                    return (\r\n                      <Button\r\n                        key={index}\r\n                        className=\"size-title\"\r\n                        disabled={item.installments === 0}\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/addCart\",\r\n                            payload: {\r\n                              product_id: item.id,\r\n                              quantity: item.installments > 0 ? 1 : 0,\r\n                              size: current,\r\n                              product: item,\r\n                            },\r\n                          });\r\n                          message.success(\"添加购物车成功\");\r\n                          if (item.installments === 0) {\r\n                            message.warning(\"商品被买完啦\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        {current}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n                  title=\"尺码选择\"\r\n                >\r\n                  <Button type=\"primary\" size=\"large\" style={{ width: \"100%\" }}>\r\n                    添加\r\n                  </Button>\r\n                </Popover>\r\n                <Tag className=\"tag\" color=\"#2db7f5\">\r\n                  {item.isFreeShipping ? \"isFreeShipping\" : \"noFreeShipping\"}\r\n                </Tag>\r\n                <span className=\"kucun\">库存：{item.installments}</span>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ products }) => ({\r\n  products: products.sortData,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Show);\r\n","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\components\\Cart\\Cart.js",["44"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, Button, List, Row, Col, Badge, Image } from \"antd\";\r\nimport { connect } from \"dva\";\r\nimport MyIcon from \"../../assets/Font\";\r\nimport \"./cart.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst Cart = ({ data, dispatch }) => {\r\n  useEffect(() => {\r\n    if (window.localStorage.cart_data) {\r\n      dispatch({\r\n        type: \"cart/updateCart\",\r\n      });\r\n    }\r\n  }, []);\r\n  const [visible, serVisible] = useState(0);\r\n  const total = data\r\n    .reduce((total, item) => {\r\n      return total + item.quantity * item.product.price;\r\n    }, 0)\r\n    .toFixed(2);\r\n  const count = data.reduce((total, item) => {\r\n    return total + item.quantity;\r\n  }, 0);\r\n  function getWidth() {\r\n    let cart_width = 0;\r\n    let w = document.documentElement.clientWidth;\r\n    if (w > 1300) {\r\n      cart_width = 30;\r\n    } else if (w <= 1300 && w > 1000) {\r\n      cart_width = 40;\r\n    } else if (w <= 1000 && w > 700) {\r\n      cart_width = 60;\r\n    } else if (w <= 700 && w > 600) {\r\n      cart_width = 70;\r\n    } else if (w <= 600) {\r\n      cart_width = 100;\r\n    }\r\n    return cart_width;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"small_cart\">\r\n        <MyIcon\r\n          type=\"icon-gouwuche\"\r\n          onClick={() => {\r\n            serVisible(1);\r\n          }}\r\n        />\r\n        <Badge count={count} className=\"head-example\"></Badge>\r\n      </div>\r\n\r\n      <div>\r\n        <Drawer\r\n          title={\r\n            <div className=\"inside-cart\">\r\n              <div className=\"content-title\">\r\n                <MyIcon type=\"icon-gouwuche1\" />\r\n                <Badge count={count} className=\"badge-inside\"></Badge>\r\n                <span className=\"cart-title\">Cart</span>\r\n              </div>\r\n            </div>\r\n          }\r\n          footer={\r\n            <div>\r\n              <div className=\"total\">\r\n                <Row>\r\n                  <Col span={12}>总价</Col>\r\n                  <Col span={12}>${total}</Col>\r\n                </Row>\r\n              </div>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginTop: \"20px\" }}\r\n                block\r\n                onClick={() => {\r\n                  dispatch({\r\n                    type: \"cart/clearCar\",\r\n                    payload: {\r\n                      cart_quantity: data,\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                清空购物车\r\n              </Button>\r\n            </div>\r\n          }\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={() => {\r\n            serVisible(0);\r\n          }}\r\n          visible={visible}\r\n          width={`${getWidth()}%`}\r\n        >\r\n          <List\r\n            bordered\r\n            dataSource={data}\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            renderItem={(item, index) => (\r\n              <List.Item key={item.sku}>\r\n                <Row gutter={[10, 0]}>\r\n                  <Col span={8}>\r\n                    <Image\r\n                      src={`./img/${item.product.sku}_2.jpg`}\r\n                      alt=\"裂开\"\r\n                      className=\"imgs\"\r\n                    />\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <p>{item.product.title}</p>\r\n                    <div className=\"cart-good-name\">\r\n                      <span>\r\n                        {item.size} | {item.product.style}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"cart-quantity\">Quantity:{item.quantity}</p>\r\n                  </Col>\r\n                  <Col span={8} className=\"cart_right\">\r\n                    <Button\r\n                      className=\"exit\"\r\n                      onClick={(index) => {\r\n                        dispatch({\r\n                          type: \"cart/deleteItem\",\r\n                          payload: {\r\n                            delete_id: item.product_id,\r\n                            size: item.size,\r\n                            index: index,\r\n                            quantity: item.quantity,\r\n                          },\r\n                        });\r\n                      }}\r\n                    >\r\n                      ×\r\n                    </Button>\r\n                    <div className=\"cart-good-price-box\">\r\n                      <p className=\"cart-good-price\">\r\n                        {item.product.currencyFormat}\r\n                        {item.product.price}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        disabled={item.quantity === 1}\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/decrease\",\r\n                            payload: {\r\n                              id: item.product_id,\r\n                              Csize: item.size,\r\n                            },\r\n                          });\r\n                        }}\r\n                        size=\"small\"\r\n                      >\r\n                        -\r\n                      </Button>\r\n                      &nbsp;\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: \"cart/increase\",\r\n                            payload: {\r\n                              id: item.product_id,\r\n                              remainder: item.product.installments > 0 ? 1 : 0,\r\n                              Csize: item.size,\r\n                            },\r\n                          });\r\n                        }}\r\n                        size=\"small\"\r\n                        \r\n                      >\r\n                        +\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.cart.data,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n","C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\api\\index.js",[],"C:\\Users\\Administrator\\Desktop\\demo2\\shop\\shop5\\src\\assets\\Font.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":33,"column":6,"nodeType":"51","endLine":33,"endColumn":8,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"50","line":15,"column":6,"nodeType":"51","endLine":15,"endColumn":8,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["56"],["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"58","fix":"60"},"Update the dependencies array to be: [dispatch]",{"range":"61","text":"62"},{"range":"63","text":"62"},[617,619],"[dispatch]",[428,430]]